/**
 * 
 * 1. 147 / 369 구분
 * 2. 2580 > 두 엄지와의 거리 계산
 * 
 * 엄지와의 거리는 마지막 엄지의 위치를 n이라하고, 0을 11이라고 생각할 때,
 * n과 번호의 차이의 절대값이 1,3은 1칸, 2,4,6은 2칸, 5,7,9는 3칸, 8,10은 4칸을 움직인다.
 * 다만 이를 산술적인 규칙을 구할 수가 없어 딕셔너리에 담아서 참조하기로 했다.
 */

 function solution(nums, hand) {
    const result = [];
    const leftSet = new Set([1,4,7]);
    const rightSet = new Set([3,6,9]);
    const distance = {
        0: 0,
        1: 1, 3: 1,
        2: 2, 4: 2, 6: 2,
        5: 3, 7: 3, 9: 3,
        8: 4, 10: 4,
    }

    let [ leftThumb, rightThumb ] = [ 10, 12 ]
    nums.forEach( (n) => {
        if(leftSet.has(n)) {
            result.push("L");
            leftThumb = n;
        }
        else if(rightSet.has(n)) {
            result.push("R");
            rightThumb = n;
        }
        else {
            n = n !== 0 ? n : 11;
            const leftThumbDistance = distance[Math.abs(n-leftThumb)];
            const rightThumbDistance = distance[Math.abs(n-rightThumb)];
            
            if (leftThumbDistance > rightThumbDistance) {
                result.push("R");
                rightThumb = n;
            } else if (leftThumbDistance < rightThumbDistance) {
                result.push("L");
                leftThumb = n;
            } else {
                switch (hand) {
                    case "left":
                        result.push("L");
                        leftThumb = n;
                        break;
                    case "right":
                        result.push("R");
                        rightThumb = n;
                        break;
                }
            }
        }
    });

    return result.join("");
}
