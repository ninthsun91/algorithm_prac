


/**
 * 
 * 서쪽에 N개의 사이트
 * 동쪽에는 M개의 사이트 (N<=M)
 * !!0.5sec limit!!
 * 
 * M C N
 * 
 * memoization!!
 * C[M][N] = C[M-1][N-1] + C[M-1][N]
 * 
 */

const rl = require("readline").createInterface({
    input: process.stdin,
    output: process.stdout,
});

const input = [];

rl.on("line", (line)=>{
    input.push(line);

    if (input.length-1 == input[0]) rl.close();
});

rl.on("close", ()=>{
    const T = input.shift();
    
    const C = [];
    for(let i=0; i<T; i++) {
        const [N, M] = input[i].split(" ").map(Number);
        if (N===0 || N===M) {
            console.log(1);
            continue;
        }

        for(let n=0; n<M; n++) {
            C.push([]);
            for(let r=0; r<=n; r++) {
                if (r===0 || r===n) {
                    C[n].push(1);
                    continue;
                }
                C[n].push( C[n-1][r-1]+C[n-1][r] );
            }
        }
        console.log( C[M-1][N-1] + C[M-1][N] );
    }
});





import sys
input = sys.stdin.readline

T = int(input())
C = []
result = ""

for i in range(T):
    N, M = map(int, input().split())
    if (N==0) or (N==M):
        result += "1\n"
        continue

    for n in range(M):
        if len(C)==n: 
            C.append([])
        for r in range(n+1):
            if (r==0) or (r==n):
                C[n].append(1)
                continue
            C[n].append( C[n-1][r-1]+C[n-1][r] )

    result += f"{C[M-1][N-1]+C[M-1][N]}\n"
print(result)
